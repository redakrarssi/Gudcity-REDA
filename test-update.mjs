import { createRequire } from 'module';\nconst require = createRequire(import.meta.url);\nimport { Pool } from '@neondatabase/serverless';\n\n// Directly set the database URL\nconst DATABASE_URL = \"postgres://neondb_owner:npg_rpc6Nh5oKGzt@ep-rough-violet-a22uoev9-pooler.eu-central-1.aws.neon.tech/neondb?sslmode=require\";\n\n// Create a database connection\nconst pool = new Pool({\n  connectionString: DATABASE_URL,\n  ssl: true\n});\n\nasync function main() {\n  try {\n    console.log('Testing direct business profile update...');\n    \n    // Get a sample business ID\n    const businessResult = await pool.query(`\n      SELECT id FROM users WHERE user_type = 'business' LIMIT 1\n    `);\n    \n    if (businessResult.rows.length === 0) {\n      console.log('No business users found');\n      return;\n    }\n    \n    const businessId = businessResult.rows[0].id;\n    console.log(`Found business ID: ${businessId}`);\n    \n    // Get current profile data\n    const profileBefore = await pool.query(`\n      SELECT * FROM business_profile WHERE business_id = $1\n    `, [businessId]);\n    \n    console.log('Current profile data:');\n    console.log(JSON.stringify(profileBefore.rows[0], null, 2));\n    \n    // Update the name directly\n    const newName = 'Updated Test Business ' + new Date().toISOString();\n    console.log(`Updating name to: ${newName}`);\n    \n    const updateResult = await pool.query(`\n      UPDATE business_profile \n      SET name = $1, updated_at = CURRENT_TIMESTAMP \n      WHERE business_id = $2 \n      RETURNING id, business_id, name\n    `, [newName, businessId]);\n    \n    console.log('Update result:');\n    console.log(JSON.stringify(updateResult.rows[0], null, 2));\n    \n    // Get updated profile data\n    const profileAfter = await pool.query(`\n      SELECT * FROM business_profile WHERE business_id = $1\n    `, [businessId]);\n    \n    console.log('Updated profile data:');\n    console.log(JSON.stringify(profileAfter.rows[0], null, 2));\n    \n    console.log('\\nTest complete!');\n  } catch (error) {\n    console.error('Error testing business profile update:', error);\n  } finally {\n    await pool.end();\n  }\n}\n\nmain(); 